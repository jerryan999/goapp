apiVersion: apps/v1
kind: Deployment
metadata:
  name: goapp
  labels:
    app: goapp
spec:
  replicas: 2
  selector:
    matchLabels:
      app: goapp
  template:
    metadata:
      labels:
        app: goapp
    spec:
      containers:
        - name: goapp
          image: golang:1.14
          ports:
            - containerPort: 8080
              protocol: TCP
          volumes:
            - name: goapp-data
              hostPath:
                path: /goapp-data
              mountPath: /goapp-data
          resources:
            limits:
              cpu: 100m
              memory: 100Mi
            requests:
              cpu: 100m
              memory: 100Mi

---
# redis statefulset

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: redis
  labels:
    app: redis
spec:
  replicas: 3
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
        - name: redis
          image: redis:5.0.3-alpine
          ports:
            - containerPort: 6379
              protocol: TCP
          resources:
            limits:
              cpu: 100m
              memory: 100Mi
            requests:
              cpu: 100m
              memory: 100Mi
          volumeMounts:
            - name: redis-data
              mountPath: /data
              readOnly: true
      volumes:
        - name: redis-data
          persistentVolumeClaim:
            claimName: redis-data

--- 
# redis service 
apiVersion: v1
kind: Service
metadata:
  name: redis
  labels:
    app: redis
spec:
  type: ClusterIP
  ports:
    - port: 6379
      targetPort: 6379
      protocol: TCP
  selector:
    app: redis
  

---
# mongo statefulset
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongo
  labels:
    app: mongo
spec:
  replicas: 3
  selector:
    matchLabels:
      app: mongo
  template:
    metadata:
      labels:
        app: mongo
    spec:
      containers:
        - name: mongo
          image: mongo:4.2.8
          ports:
            - containerPort: 27017
              protocol: TCP
          resources:
            limits:
              cpu: 100m
              memory: 100Mi
            requests:
              cpu: 100m
              memory: 100Mi
          volumeMounts:
            - name: mongo-data
              mountPath: /data
              readOnly: true
      volumes:
        - name: mongo-data
          persistentVolumeClaim:
            claimName: mongo-data

---  
# mongo service
apiVersion: v1
kind: Service
metadata:
  name: mongo
  labels:
    app: mongo
spec:
  type: ClusterIP
  ports:
    - port: 27017
      targetPort: 27017
      protocol: TCP
  selector:
    app: mongo


--- 
# volume
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: redis-data
  labels:
    app: redis
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mongo-data
  labels:
    app: mongo
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi

---
# pv
apiVersion: v1
kind: PersistentVolume
metadata:
  name: redis-data-pv
  labels:
    app: redis
spec:
  accessModes:
    - ReadWriteOnce
  capacity:
    storage: 1Gi
  persistentVolumeReclaimPolicy: Retain
  persistentVolumeSource:
    hostPath:
      path: /goapp-data